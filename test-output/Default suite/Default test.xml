<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Mahesh_S" failures="0" tests="1" name="Default test" time="3.56" errors="0" timestamp="2024-03-14T15:45:44 IST">
  <testcase classname="com.GenericLibraries.selenium.BaseClass" name="@BeforeMethod methodConfig" time="0.944">
    <failure type="org.apache.poi.EmptyFileException" message="The supplied file was empty (zero bytes long)">
      <![CDATA[org.apache.poi.EmptyFileException: The supplied file was empty (zero bytes long)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:218)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:185)
at com.GenericLibraries.selenium.ExcelUtility.excelIntit(ExcelUtility.java:48)
at com.GenericLibraries.selenium.BaseClass.methodConfig(BaseClass.java:69)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod methodConfig -->
  <testcase classname="com.GenericLibraries.selenium.BaseClass" name="@AfterMethod methodTearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod methodTearDown -->
  <testcase classname="com.GenericLibraries.selenium.BaseClass" name="@AfterClass classTearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass classTearDown -->
  <testcase classname="com.TestScripts.selenium.AddCourseTest" name="addUsersTest" time="0.0">
    <skipped/>
  </testcase> <!-- addUsersTest -->
</testsuite> <!-- Default test -->
